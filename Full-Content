
The following outline details the core ReactJS concepts essential for foundational knowledge

### **Fundamentals:**

- [ ]  JSX Function Components
- [ ]  Create-react-app vs Vite
- [ ]  Import/Export Components
- [ ]  React Fragment
- [ ]  Styling Components
- [ ]  Props
- [ ]  State & useState Hook
- [ ]  Conditional Rendering
- [ ]  Lists & Keys
- [ ]  Event Handling
- [ ]  Form Handling
- [ ]  Composition vs Inheritance
- [ ]  Component Lifecycle
- [ ]  useEffect Hook

### **Important Advanced Topics (Consider selectively):**

- [ ]  Context (if complex data sharing needed)
- [ ]  Refs (if direct DOM interaction needed)
- [ ]  Hooks (useReducer, useMemo, useCallback, useTransition - learn as needed)
- [ ]  Error Boundaries
- [ ]  Portals
- [ ]  HTTP Requests (Get, Post, Put/Patch, Delete)

### **Optional Topics:**

- [ ]  Custom Hooks (advanced usage)
- [ ]  Performance Optimization Techniques (if critical)
- [ ]  React Server Components (experimental)

### **Ecosystem (Packages - explore based on project requirements):**

- [ ]  State Management (Redux Toolkit, Zustand - if complex state)
- [ ]  Routing (React Router, TanStack Router)
- [ ]  Styling (Styled Components, Emotion, Tailwind CSS, Material UI)
- [ ]  Forms (React Hook Form, TanStack Form)
- [ ]  Testing (Vitest, React Testing Library, Playwright, Cypress)
- [ ]  Misc (TypeScript, Storybook, React i18Next, Firebase/Supabase)
-------------------------------------------------------------------------------------------------------------------------------------------
